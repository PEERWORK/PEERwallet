/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  MintGovernanceToken,
  MintGovernanceTokenInterface,
} from "../MintGovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum AuthType",
        name: "authType",
        type: "uint8",
      },
    ],
    name: "AuthTypeNotFoundInVerifiedResult",
    type: "error",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER_V2",
    outputs: [
      {
        internalType: "contract IAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "APP_ID",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IS_IMPERSONATION_MODE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SISMO_CONNECT_LIB_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "claimWithSismo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isImpersonationMode",
                type: "bool",
              },
            ],
            internalType: "struct VaultConfig",
            name: "vault",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peerToken",
    outputs: [
      {
        internalType: "contract PeerGovernanceToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class MintGovernanceToken__factory {
  static readonly abi = _abi;
  static createInterface(): MintGovernanceTokenInterface {
    return new utils.Interface(_abi) as MintGovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintGovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as MintGovernanceToken;
  }
}
